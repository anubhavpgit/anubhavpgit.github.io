# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI and Deploy

permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

on:
  push:
    branches: ["main-v3"]
  pull_request:
    branches: ["main-v3"]

jobs:
  build:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'deploy')
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check if LaTeX file was changed
        id: check_latex
        run: |
          if git diff --name-only HEAD^..HEAD | grep -q "templates/resume/resume.tex"; then
            echo "::set-output name=latex_changed::true"
          else
            echo "::set-output name=latex_changed::false"
          fi
      - name: Compile LaTeX document
        if: steps.check_latex.outputs.latex_changed == 'true'
        uses: xu-cheng/latex-action@v2
        with:
          root_file: ./templates/resume/resume.tex
      - name: Download existing resume
        if: steps.check_latex.outputs.latex_changed == 'false'
        run: wget https://anubhavp.dev/resume.pdf
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Install Dependencies
        run: npm ci
      - name: Build
        run: npm run generate
      - name: Move resume.pdf to .dist folder
        run: mv resume.pdf .dist/
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: .dist
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
